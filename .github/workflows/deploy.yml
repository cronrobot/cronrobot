name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      -
        name: deploy
        env:
          MAIN_SERVER_SSH_B64: ${{secrets.MAIN_SERVER_SSH_B64}}
          MAIN_SERVER_HOST: ${{secrets.MAIN_SERVER_HOST}}
          MAIN_SERVER_USERNAME: ${{secrets.MAIN_SERVER_USERNAME}}
          GRAFANA_DOTENV: ${{secrets.GRAFANA_DOTENV}}
          DOTENV_WWW_PROD: ${{secrets.DOTENV_WWW_PROD}}
          WWW_CREDENTIALS_PRODUCTION_KEY: ${{secrets.WWW_CREDENTIALS_PRODUCTION_KEY}}
          DOTENV_CELERY_ADMIN_B64: ${{ secrets.DOTENV_CELERY_ADMIN_B64 }}
          DOTENV_DJANGO_B64: ${{ secrets.DOTENV_DJANGO_B64 }}
          LOKI_LOCAL_CONFIG_YAML_B64: ${{ secrets.LOKI_LOCAL_CONFIG_YAML_B64 }}
        run: |
          go_home="cd /var/www/cronrobot"

          # .env
          echo "$DOTENV_DJANGO_B64" | base64 -d > .env

          # .env for www-cronrobot
          echo "$DOTENV_WWW_PROD" | base64 -d > .www-cronrobot.env

          # .grafana.env
          echo "$GRAFANA_DOTENV" | base64 -d > .grafana.env

          # .env for celery-admin
          echo "$DOTENV_CELERY_ADMIN_B64" | base64 -d > .celery-admin.env

          # loki config file
          echo "$LOKI_LOCAL_CONFIG_YAML_B64" | base64 -d > grafana/loki/etc/local-config.yaml

          # ssh setup
          mkdir .ssh
          echo $MAIN_SERVER_SSH_B64 | base64 -d > .ssh/main_server_pk
          chmod 400 .ssh/main_server_pk
          ssh_in="ssh -o StrictHostKeyChecking=no -i .ssh/main_server_pk $MAIN_SERVER_USERNAME@$MAIN_SERVER_HOST"

          # pause all schedulers
          $ssh_in "$go_home ; sudo docker-compose exec -T www-api bin/rails schedulers:pause_all"

          # git pull
          $ssh_in "$go_home ; git pull"
          cat .env | $ssh_in -T "cat > /var/www/cronrobot/.env"
          cat .grafana.env | $ssh_in -T "cat > /var/www/cronrobot/.grafana.env"
          cat .www-cronrobot.env | $ssh_in -T "cat > /var/www/cronrobot/www-cronrobot/.env"
          cat .celery-admin.env | $ssh_in -T "cat > /var/www/cronrobot/celery-admin/.env"

          # copy loki config
          cat grafana/loki/etc/local-config.yaml | $ssh_in -T "cat > /var/www/cronrobot/grafana/loki/etc/local-config.yaml"

          # python deps
          $ssh_in "cd /var/www/cronrobot/celery-admin ; pip install -r requirements.txt"

          $ssh_in "$go_home ; sudo docker-compose build"
          $ssh_in "$go_home ; sudo docker-compose up -d"

          # reload celery
          $ssh_in "$go_home ; pm2 reload celery-beat --update-env"
          $ssh_in "$go_home ; pm2 reload celery-worker --update-env"
          sleep 5
          $ssh_in "$go_home ; pm2 list"
          
          # resume all schedulers
          $ssh_in "$go_home ; sudo docker-compose exec -T www-api bin/rails schedulers:resume_all"