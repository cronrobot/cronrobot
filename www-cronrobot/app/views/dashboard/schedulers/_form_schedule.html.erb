<fieldset>
    <legend class="sub-heading">Schedule</legend>
    <div class="form-grid">
        <%= form.select "params[schedule_type]",
            friendly_schedule_lister, {
                selected: @scheduler&.params&.dig("schedule_type") || "every_5_minutes"
            },
            multiple: false,
            onchange: "handleScheduleTypeChange(this.value)",
            class: "select-input",
            id: "schedule_type_field" %>
                
        <div id="customScheduleBlock">
            <%= form.text_field :schedule,
                class: "form-input",
                id: "schedule_field",
                onchange: "handleScheduleTypeChange(document.getElementById('schedule_type_field').value)",
                placeholder: "Custom Schedule (Crontab format)" %>
            <p class="custom-schedule" id="customScheduleMsg">hello test</p>
        </div>
    </div>
</fieldset>

<script>
    function getSchedules() {
        return <%= friendly_schedules.to_json.html_safe %>
    }

    (function() {
        let scheduleType = document.getElementById("schedule_type_field")

        handleScheduleTypeChange(scheduleType.value)

        console.log(window.cronstrue)
    })();

    function stringifyCustomCron(value) {
        try {
            return window.cronstrue.toString(value)
        } catch(e) {
            return "Invalid cron expression"
        }
        
    }

    function handleScheduleTypeChange(value) {
        const schedules = getSchedules()
        const scheduleTextField = document.getElementById("schedule_field")

        if (value === "custom") {
            window.formShow("customScheduleBlock")

            const msgBox = document.getElementById("customScheduleMsg")

            const humanCron = stringifyCustomCron(scheduleTextField.value)
            msgBox.innerHTML = humanCron
            msgBox.style["max-width"] = `${parseInt(scheduleTextField.getBoundingClientRect().width)}px`

            if (humanCron.includes("Invalid cron")) {
                msgBox.classList.remove("custom-schedule-valid")
                msgBox.classList.add("custom-schedule-invalid")
            } else {
                msgBox.classList.remove("custom-schedule-invalid")
                msgBox.classList.add("custom-schedule-valid")
            }
        } else {
            window.formHide("customScheduleBlock")

            const schedule = schedules.find(s => s["id"] === value)

            scheduleTextField.value = schedule["cron"]
        }
    }
</script>